name: Python Wheels

on:
  push:
  pull_request:
  release:
    types:
      - created

jobs:
  build-ubuntu:
    runs-on: ${{ matrix.config.runs_on }}
    container: ${{ matrix.config.container }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - os: ubuntu-20.04
          runs_on: ubuntu-latest
          container: ubuntu:20.04
          py_platform: manylinux_2_31_x86_64
        - os: ubuntu-22.04
          runs_on: ubuntu-latest
          container: ubuntu:22.04
          py_platform: manylinux_2_35_x86_64
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - uses: actions/checkout@v2
      with:
        path: ws/src/tesseract_python
    - name: install sudo, tzdata, keyboard-configuration
      shell: bash
      run: |
        echo -en "XKBMODEL=\"pc105\"\nXKBLAYOUT=\"us\"\nXKBVARIANT=\"\"\nXKBOPTIONS=\"\"\nBACKSPACE=\"guess\"\n" > /etc/default/keyboard
        apt update 
        apt install sudo tzdata python3 keyboard-configuration -y -qq
        ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
        dpkg-reconfigure --frontend noninteractive tzdata
    - name: apt
      run: >
        sudo apt-get install python3-pip libboost-all-dev
        libeigen3-dev libtinyxml2-dev libconsole-bridge-dev libassimp-dev
        liburdfdom-dev liboctomap-dev liborocos-kdl-dev libpcl-dev
        libflann-dev libjsoncpp-dev libyaml-cpp-dev git cmake ninja-build
        build-essential autoconf automake libtool bison libpcre2-dev libpcre3-dev
        lcov libbullet-dev libbullet-extras-dev patchelf python3-venv -y -qq
    - name: pip
      run: |
        sudo python3 -m pip install --upgrade pip
        sudo python3 -m pip install auditwheel wheel numpy setuptools colcon-common-extensions vcstool
    - name: vcs import
      working-directory: ws/src
      run: vcs import --input tesseract_python/dependencies_with_ext.rosinstall
    - name: colcon build
      working-directory: ws
      run: >
        colcon build --packages-up-to tesseract_python --merge-install
        --cmake-force-configure
        --packages-ignore bullet
        --event-handlers console_cohesion+
        --cmake-args -DCMAKE_BUILD_TYPE=Release
        -DBUILD_IPOPT=OFF -DBUILD_SNOPT=OFF
        -DPYTHON_EXECUTABLE=/usr/bin/python3 -DTESSERACT_PYTHON_BUILD_WHEEL=ON
        -DTESSERACT_PYTHON_WHEEL_PLATFORM=${{ matrix.config.py_platform }}
        -DTESSERACT_ENABLE_EXAMPLES=OFF -DTESSERACT_PLUGIN_FACTORY_CALLBACKS=ON
    - name: test
      shell: bash
      run: |
        python3 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install ws/build/tesseract_python/python/wheelhouse/*
        python -m pip install pytest
        export TESSERACT_SUPPORT_DIR=$GITHUB_WORKSPACE/ws/src/tesseract/tesseract_support
        cd ws/src/tesseract_python/tesseract_python
        pytest -s
    - name: archive wheels
      uses: actions/upload-artifact@v2
      with:
        name: 'python-wheels-${{ matrix.config.os }}'
        path: ws/build/tesseract_python/python/*
  build-win:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x64
            vcpkg_triplet: x64-windows-release
            cmake_arch: x64
            python_version: "3.7"
          - arch: x64
            vcpkg_triplet: x64-windows-release
            cmake_arch: x64
            python_version: "3.8"
          - arch: x64
            vcpkg_triplet: x64-windows-release
            cmake_arch: x64
            python_version: "3.9"
          - arch: x64
            vcpkg_triplet: x64-windows-release
            cmake_arch: x64
            python_version: "3.10"
    steps:
    - uses: actions/checkout@v2
      with:
        path: ws/src/tesseract_python
    - uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.config.python_version }}'
        architecture: ${{ matrix.config.arch }}
    - name: checkout vcpkg
      uses: actions/checkout@v2
      with:
        path: vcpkg
        repository: microsoft/vcpkg
    - name: bootstrap vcpkg
      working-directory: vcpkg
      run: bootstrap-vcpkg.bat
    - name: vcpkg
      working-directory: vcpkg
      run: >
        vcpkg install --triplet ${{ matrix.config.vcpkg_triplet }} 
        tinyxml2 console-bridge assimp urdfdom octomap orocos-kdl pcl gtest flann jsoncpp
        yaml-cpp boost-dll boost-program-options boost-serialization boost-filesystem
    - name: clean vcpkg
      working-directory: vcpkg
      shell: cmd
      run: |
        rmdir /s /q buildtrees
        rmdir /s /q downloads
        rmdir /s /q .git
    - name: pip3
      run: |
        python -m pip install numpy setuptools wheel pytest delvewheel colcon-common-extensions vcstool
    - name: env python3
      run: echo  ("PYTHON3_EXE=" + (Get-Command Python.exe).Path) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: choco
      run: |
        choco install swig -r
    - name: vcs import
      working-directory: ws/src
      run: vcs import --input tesseract_python\dependencies_with_ext.rosinstall
    - name: colcon build
      working-directory: ws
      shell: cmd
      run: |
        set CXXFLAGS=%CXXFLAGS% -DEIGEN_DONT_ALIGN=1 -DEIGEN_DONT_VECTORIZE=1
        set CMAKE_TOOLCHAIN_FILE=%GITHUB_WORKSPACE%\vcpkg\scripts\buildsystems\vcpkg.cmake
        set PATH=%PATH%;%GITHUB_WORKSPACE%\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}\bin
        colcon build --packages-up-to tesseract_python --merge-install ^
        --cmake-force-configure ^
        --packages-ignore bullet ^
        --event-handlers console_cohesion+ ^
        --cmake-args -GNinja -DCMAKE_BUILD_TYPE=Release ^
        -DINSTALL_OMPL_TAG=master -DBUILD_IPOPT=OFF -DBUILD_SNOPT=OFF  -DINSTALL_FCL=ON -DINSTALL_BULLET=ON ^
        -DPYTHON_EXECUTABLE="${{ env.PYTHON3_EXE }}" ^
        -DTESSERACT_PYTHON_BUILD_WHEEL=ON ^
        -DTESSERACT_ENABLE_EXAMPLES=OFF -DTESSERACT_PLUGIN_FACTORY_CALLBACKS=ON ^
        -DVCPKG_TARGET_TRIPLET=${{ matrix.config.vcpkg_triplet }} -DVCPKG_APPLOCAL_DEPS=OFF
    - name: test
      shell: cmd
      run: |
        python -m venv venv
        if %errorlevel% neq 0 exit /b %errorlevel%
        call venv\Scripts\activate
        if %errorlevel% neq 0 exit /b %errorlevel%
        python -m pip install --upgrade pip
        if %errorlevel% neq 0 exit /b %errorlevel%
        python -m pip install ws/build/tesseract_python/python/wheelhouse/*
        if %errorlevel% neq 0 exit /b %errorlevel%
        python -m pip install pytest
        if %errorlevel% neq 0 exit /b %errorlevel%
        set TESSERACT_SUPPORT_DIR=%GITHUB_WORKSPACE%\ws\src\tesseract\tesseract_support
        cd ws\src\tesseract_python\tesseract_python
        if %errorlevel% neq 0 exit /b %errorlevel%
        python -m pytest -s
        if %errorlevel% neq 0 exit /b %errorlevel%
    - name: archive wheels
      uses: actions/upload-artifact@v2
      with:
        name: 'python-wheels-${{ matrix.config.os }}'
        path: ws/build/tesseract_python/python/*
    - name: archive logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: 'build-logs-win-${{ matrix.config.arch }}-python-${{ matrix.config.python_version }}'
        path: "**/*.log"
        retention-days: 2 
    
    
    